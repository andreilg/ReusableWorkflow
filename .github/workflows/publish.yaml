name: Create and Publish Docker Image

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      tag:
        required: true
        type: string
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true
        
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: docker/app/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
# - name: Install Cosign
#   uses: sigstore/cosign-installer@v2
#   with:
#     cosign-release: "v1.11.0"
# - name: Login to DockerHub
#   if: github.event_name != 'pull_request'
#   uses: docker/login-action@v2
#   with:
#     username: ${{ secrets.DOCKERHUB_USERNAME }}
#     password: ${{ secrets.DOCKERHUB_TOKEN }}

# # Sign the resulting Docker image digest except on PRs.
# # This will only write to the public Rekor transparency log when the Docker
# # repository is public to avoid leaking data.  If you would like to publish
# # transparency data even for private images, pass --force to cosign below.
# # https://github.com/sigstore/cosign
# - name: Sign the published Docker image
#   if: ${{ github.event_name != 'pull_request' }}
#   env:
#     COSIGN_EXPERIMENTAL: "true"
#   # This step uses the identity token to provision an ephemeral certificate
#   # against the sigstore community Fulcio instance.
#   run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}

# - name: Build
#   run: docker build -t "${{ github.repository }}:${{ github.ref_name }}" -f docker/app/Dockerfile .
# - run: docker image ls -a
#   deploy:
#     name: Deploy
#     needs:
#       - build
#     runs-on: ubuntu-latest

# - name: Login to image repository
#         if: github.ref_type == 'tag'
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_TOKEN }}

#       - name: Build and push
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           file: docker/dockerfile/hello-world/Dockerfile
#           push: ${{ github.ref_type == 'tag' }}
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
